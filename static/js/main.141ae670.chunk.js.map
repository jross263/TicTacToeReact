{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","isXNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kMAIA,SAASA,EAAOC,GACf,OACC,4BAAQC,UAAU,SAASC,QAAS,kBAAMF,EAAME,YAC9CF,EAAMG,O,IAKJC,E,YACL,WAAYJ,GAAQ,IAAD,8BAClB,4CAAMA,KAEDK,MAAQ,CACZC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GALQ,E,yEASPC,GACX,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAChCC,EAAgBP,IAAYA,EAAQI,KAIvCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKG,SAAS,CAAER,QAASA,EAASG,SAAUE,KAAKN,MAAMI,a,mCAG3CC,GAAI,IAAD,OACf,OAAO,kBAACX,EAAD,CAAQI,MAAOQ,KAAKN,MAAMC,QAAQI,GAAIR,QAAS,kBAAM,EAAKa,YAAYL,Q,+BAI7E,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAQ1C,OALCU,EADEC,EACI,kBAAcA,GAEd,wBAAoBN,KAAKN,MAAMI,QAAU,IAAM,KAIrD,6BACC,yBAAKR,UAAU,UAAUe,GACzB,yBAAKf,UAAU,aACbU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAEpB,yBAAKjB,UAAU,aACbU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAEpB,yBAAKjB,UAAU,aACbU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GAjDJC,IAAMC,WAwDpBC,E,iLAEJ,OACC,yBAAKpB,UAAU,QACd,yBAAKA,UAAU,cACd,kBAACG,EAAD,OAED,yBAAKH,UAAU,aACd,8BACA,mC,GATckB,IAAMC,WAoBzB,SAASP,EAAgBP,GAWxB,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACvE,OAAOpB,EAAQkB,GAGhB,OAAO,KAnBRG,IAASC,OAAO,kBAACP,EAAD,MAAUQ,SAASC,eAAe,U","file":"static/js/main.141ae670.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n\treturn (\r\n\t\t<button className=\"square\" onClick={() => props.onClick()}>\r\n\t\t\t{props.value}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nclass Board extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tsquares: Array(9).fill(null),\r\n\t\t\tisXNext: true\r\n\t\t};\r\n\t}\r\n\r\n\thandleClick(i) {\r\n\t\tconst squares = this.state.squares.slice();\r\n\t\tif(calculateWinner(squares) || squares[i]){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsquares[i] = this.state.isXNext ? 'X' : 'O';\r\n\t\tthis.setState({ squares: squares, isXNext: !this.state.isXNext });\r\n\t}\r\n\r\n\trenderSquare(i) {\r\n\t\treturn <Square value={this.state.squares[i]} onClick={() => this.handleClick(i)} />;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst winner = calculateWinner(this.state.squares);\r\n\t\tlet status;\r\n\t\tif(winner){\r\n\t\t\tstatus = `Winner: ${winner}`\r\n\t\t} else{\r\n\t\t\tstatus = `Players turn: ${this.state.isXNext ? \"X\" : \"O\"}`;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"status\">{status}</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(0)}\r\n\t\t\t\t\t{this.renderSquare(1)}\r\n\t\t\t\t\t{this.renderSquare(2)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(3)}\r\n\t\t\t\t\t{this.renderSquare(4)}\r\n\t\t\t\t\t{this.renderSquare(5)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(6)}\r\n\t\t\t\t\t{this.renderSquare(7)}\r\n\t\t\t\t\t{this.renderSquare(8)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Game extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t<div className=\"game-board\">\r\n\t\t\t\t\t<Board />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\t<div>{/* status */}</div>\r\n\t\t\t\t\t<ol>{/* TODO */}</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n\r\nfunction calculateWinner(squares) {\r\n\tconst lines = [\r\n\t  [0, 1, 2],\r\n\t  [3, 4, 5],\r\n\t  [6, 7, 8],\r\n\t  [0, 3, 6],\r\n\t  [1, 4, 7],\r\n\t  [2, 5, 8],\r\n\t  [0, 4, 8],\r\n\t  [2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t  const [a, b, c] = lines[i];\r\n\t  if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\treturn squares[a];\r\n\t  }\r\n\t}\r\n\treturn null;\r\n  }"],"sourceRoot":""}